test:
    name: backup-contract-benchmark
    description: test benchmark
    workers:
      type: local
      number: 3
    rounds:
      - label: queryBackupsByTimestamps
        description: Query Backups By Timestamps benchmark
        txNumber: 10000
        rateControl: 
          type: fixed-rate
          opts:
            tps: 448
        workload:
          module: ./workloads/queryBackupsByTimestamps.js
          arguments:
            backups: 10
            contractId: backup

      # - label: queryBackupsByTimestamps
      #   description: Query Backups By Timestamps benchmark
      #   txNumber: 50000
      #   rateControl: 
      #     type: fixed-rate
      #     opts:
      #       tps: 530
      #   workload:
      #     module: ./workloads/queryBackupsByTimestamps.js
      #     arguments:
      #       backups: 10
      #       contractId: backup

      # - label: queryBackupsByTimestamps
      #   description: Query Backups By Timestamps benchmark
      #   txNumber: 100000
      #   rateControl: 
      #     type: fixed-rate
      #     opts:
      #       tps: 500
      #   workload:
      #     module: ./workloads/queryBackupsByTimestamps.js
      #     arguments:
      #       backups: 10
      #       contractId: backup

observer:
  type: prometheus
  interval: 5

monitor:
  interval: 1
  type: ['docker', 'prometheus', 'cadvisor']
  docker:
    containers: ['all']
  prometheus:
    url: "http://0.0.0.0:9090"
    metrics:
      ignore: [prometheus, cadvisor, grafana, node-exporter]
      include:
        Endorse Time (s):
          query: rate(endorser_proposal_duration_sum{chaincode="backup"}[5m])/rate(endorser_proposal_duration_count{chaincode="backup"}[5m])
          step: 1
          label: instance
          statistic: avg
